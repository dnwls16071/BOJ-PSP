# 세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다. 이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.
#
# 한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
# 쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
# 이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 단, 이동 횟수는 최소가 되어야 한다.
#
# 아래 그림은 원판이 5개인 경우의 예시이다.

N = int(input())

# def hanoi(원반개수, 시작, 목표, 경유):
#   if 원반개수 == 1:
#   print(시작, 목표)
#   return

def hanoi(N, start, destination, via):
    if N == 1:
        print(start, destination)
        return
    # 시작기둥에 있는 가장 큰 원반을 제외한 나머지 원반을 보조 기둥에 옮긴다.
    hanoi(N - 1, start, via, destination)
    # 시작기둥에 있는 가장 큰 원반을 목표기둥으로 옮겨야한다.
    print(start, destination)
    # 시작기둥에는 아무것도 없고 보조기둥에 원반이 있는 상태이므로 보조기둥을 시작기둥으로 인식하게끔 처리하여 작성한다.
    hanoi(N - 1, via, destination, start)


N = int(input())
print((2 ** N) - 1)
hanoi(N, 1, 3, 2)

# 이 문제는 일반수학에서도 유명한 하노이의 탑 문제이다.
# 하노이의 탑 문제를 해석하면 다음과 같다.
# 전체 N개의 원반 중 가장 큰 원반 1개를 제외한 (N-1)개 원반은 보조기둥을 무조건 경유해야하므로 21행과 같이 코드를 작성했다.
# 그 다음 시작기둥에 남아있는 가장 큰 원반 1개를 목적지기둥으로 옮겨야하므로 23행과 같이 코드를 작성했다.
# 마지막으로 보조기둥에 남아있는 (N-1)개의 원반을 목적지기둥으로 옮겨야한다. 이 때, 보조기둥은 시작기둥이 되는 셈이기 때문에 함수 매개변수의 위치를 변경해야한다.