# <그림 1>과 같이 9×9 격자판에 쓰여진 81개의 자연수 또는 0이 주어질 때, 이들 중 최댓값을 찾고 그 최댓값이 몇 행 몇 열에 위치한 수인지 구하는 프로그램을 작성하시오.

# 예를 들어, 다음과 같이 81개의 수가 주어지면

#  	1열	2열	3열	4열	5열	6열	7열	8열	9열
# 1행	3	23	85	34	17	74	25	52	65
# 2행	10	7	39	42	88	52	14	72	63
# 3행	87	42	18	78	53	45	18	84	53
# 4행	34	28	64	85	12	16	75	36	55
# 5행	21	77	45	35	28	75	90	76	1
# 6행	25	87	65	15	28	11	37	28	74
# 7행	65	27	75	41	7	89	78	64	39
# 8행	47	47	70	45	23	65	3	41	44
# 9행	87	13	82	38	31	12	29	29	80
# 이들 중 최댓값은 90이고, 이 값은 5행 7열에 위치한다.

board = []
max = -1
max_i = 0   # 행 값
max_j = 0   # 열 값
for _ in range(9):
    board.append(list(map(int, input().split())))

for i in range(9):
    for j in range(9):
        if board[i][j] > max:
            max = board[i][j]
            max_i = i + 1
            max_j = j + 1
print(max)
print(max_i, max_j)

# max값이 0일때와 max값이 -1일때의 결과가 달라야한다.
# 2차원 배열의 값이 0 혹은 양수의 값이기 때문에 모두가 0이 나오면 성립될 수 없다.
# 따라서 0보다 1만큼 작은 -1값을 max 변수에 저장하고 갱신해야한다.